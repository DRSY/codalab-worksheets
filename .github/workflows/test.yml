name: Test
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  format_frontend:
    name: Format frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 10.x
      - run: npm install
        working-directory: ./frontend
      - run: npm run check-ci
        working-directory: ./frontend
        env:
          CI: true
  format_backend:
    name: Format backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.6
        uses: actions/setup-python@v1
        with:
          python-version: 3.6
      - run: pip install --upgrade black==18.9b0
      - run: black . --check --diff
  build_backend:
    name: Build backend
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [rest-server, worker]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: 3.6
      - run: python3 codalab_service.py build --pull --version ${VERSION} --push -s ${SERVICE}
        env:
          CODALAB_DOCKER_USERNAME: ${{ secrets.CODALAB_DOCKER_USERNAME }}
          CODALAB_DOCKER_PASSWORD: ${{ secrets.CODALAB_DOCKER_PASSWORD }}
          VERSION: ${{ github.head_ref }}
          SERVICE: ${{ matrix.service }}
  build_frontend:
    name: Build frontend
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [frontend]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: 3.6
      - run: python3 codalab_service.py build --pull --version ${VERSION} --push -s ${SERVICE}
        env:
          CODALAB_DOCKER_USERNAME: ${{ secrets.CODALAB_DOCKER_USERNAME }}
          CODALAB_DOCKER_PASSWORD: ${{ secrets.CODALAB_DOCKER_PASSWORD }}
          VERSION: ${{ github.head_ref }}
          SERVICE: ${{ matrix.service }}
  test_backend:
    name: Test backend
    runs-on: ubuntu-latest
    needs: [build_backend]
    strategy:
      matrix:
        test: [unittest gen-rest-docs gen-cli-docs gen-readthedocs, basic, upload1, upload2, upload3, upload4 download refs binary, rm make worksheet_search worksheet_tags, freeze, perm, search, search_time, run, mimic, status, batch, groups, anonymous, competition, rest1, worksheets, worksheet, detach]
        # test: [read, kill, write, resources, netcat, netcurl, workers]
      fail-fast: false
    steps:
      - name: Clear free space
        run: |
            sudo rm -rf /usr/share/dotnet
            sudo rm -rf /opt/ghc
            df -h
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: 3.6
      - name: Setup tests
        run: |
          sudo service mysql stop
          python3 codalab_service.py pull --version ${VERSION}
        env:
          VERSION: ${{ github.head_ref }}
      - name: Run tests
        run: |
          python3 codalab_service.py start --services default monitor --version ${VERSION}
          python3 test_runner.py --version ${VERSION} ${TEST}
          # docker restart codalab_worker_1
          # python3 test_runner.py --version ${VERSION} run
          # docker stop codalab_worker_1
          # python3 codalab_service.py start --services init worker --version ${VERSION} --shared-file-system
          # Run frontend tests + backend test modules that test shared file systems code paths
          # python3 test_runner.py --version ${TRAVIS_BRANCH} frontend basic run read write kill resources netcat netcurl workers
        env:
          TEST: ${{ matrix.test }}
          VERSION: ${{ github.head_ref }}
      - name: Save logs on failure
        run: |
          mkdir /tmp/logs
          for c in $(docker ps -a --format="{{.Names}}"); do docker logs $c > /tmp/logs/$c.log 2> /tmp/logs/$c.err; done
        if: failure()
      - name: Upload logs on failure
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: logs
          path: /tmp/logs
      
  test_frontend:
    name: Test frontend
    runs-on: ubuntu-latest
    needs: [build_backend, build_frontend]
    steps:
      - name: Clear free space
        run: |
            sudo rm -rf /usr/share/dotnet
            sudo rm -rf /opt/ghc
            df -h
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: 3.6
      - name: Setup tests
        run: |
          sudo service mysql stop
          python3 codalab_service.py pull --version ${VERSION}
          pip install -r requirements.txt
          # ./scripts/test-setup.sh
          # export PATH=$PATH:/usr/bin/geckodriver
        env:
          VERSION: ${{ github.head_ref }}
      - name: Run tests
        run: |
          python3 codalab_service.py start --services default monitor --version ${VERSION}
          docker exec codalab_rest-server_1 /bin/bash -c "python3 scripts/create_sample_worksheet.py"
          python3 tests/ui/ui_tester.py --headless
        env:
          VERSION: ${{ github.head_ref }}
      - name: Upload screenshots on failure
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: results
          path: test/ui
  deploy:
    # if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    name: Deploy
    runs-on: ubuntu-latest
    needs: [format_backend, format_frontend, test_backend, test_frontend]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: 3.6
      - run: echo "skipping deployment for now"
